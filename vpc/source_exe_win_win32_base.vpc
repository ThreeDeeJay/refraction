//-----------------------------------------------------------------------------
//  SOURCE_EXE_WIN_WIN32.VPC
//
//  Base Settings for Source(TM) Projects
//-----------------------------------------------------------------------------

$MacroRequired "GITROOT"
$MacroRequired "OUTBINNAME" "$PROJECTNAME"
$MacroRequired "OUTBINDIR"

$Macro OUTBINDIR "$OUTBINDIR$PLATSUBDIR"

$Include "$GITROOT\vpc\version.vpc"
$Include "$GITROOT\vpc\loadaddress.vpc"
$Include "$GITROOT\vpc\source_exe_win_win32_debug.vpc"
$Include "$GITROOT\vpc\source_exe_win_win32_release.vpc"
$Include "$GITROOT\vpc\source_win32_base.vpc"

$IgnoreRedundancyWarning "ON"

// Common Configuration
$Configuration
{
    $General
    {
        $TargetName "$OUTBINNAME"
    }


    $Compiler
    {
        $PreprocessorDefinitions "$BASE;COMPILER_MSVC32"
        $PreprocessorDefinitions "$BASE;COMPILER_MSVC;EXENAME=$OUTBINNAME;_DLL_EXT=$_DLL_EXT"
        $EnableEnhancedInstructionSet "Streaming SIMD Extensions (/arch:SSE)"
    }

    $Linker
    {
        $AdditionalDependencies "$BASE shell32.lib user32.lib advapi32.lib gdi32.lib comdlg32.lib ole32.lib"
        $TargetMachine "MachineX86 (/MACHINE:X86)"
        $AdditionalOptions "/NXCOMPAT"
        $AdditionalOptions "$BASE /ignore:4221"
        $AdditionalOptions "$BASE $SRCDIR\lib\public\ftol3.obj" [$VS2013 && $WIN32 && !$DISABLE_FTOL3_OVERRIDE && !$SOURCESDK]
    }

    $PreBuildEvent
    {
        $CommandLine "if EXIST $OUTBINDIR\$(TargetFileName) for /f $QUOTEdelims=$QUOTE %%A in ('attrib $QUOTE$OUTBINDIR\$(TargetFileName)$QUOTE') do set valveTmpIsReadOnly=$QUOTE%%A$QUOTE" "\n" \
            "set valveTmpIsReadOnlyLetter=%valveTmpIsReadOnly:~6,1%" "\n" \
            "if $QUOTE%valveTmpIsReadOnlyLetter%$QUOTE==$QUOTER$QUOTE del /q $QUOTE$(TargetDir)$QUOTE$(TargetFileName)" "\n" \
            "$CRCCHECK" "\n"
    }

    $PostBuildEvent
    {
        $CommandLine "$BASE" "copy $QUOTE$(TargetDir)$QUOTE$(TargetFileName) $OUTBINDIR\$(TargetFileName) >nul" "\n" \
            "if ERRORLEVEL 1 goto BuildEventFailed" "\n" \
            "if exist $QUOTE$(TargetDir)$QUOTE$(TargetName).map copy $QUOTE$(TargetDir)$QUOTE$(TargetName).map $OUTBINDIR\$(TargetName).map >nul" "\n"
        $CommandLine "$BASE" "copy $QUOTE$(TargetDir)$QUOTE$(TargetName).pdb $OUTBINDIR\$(TargetName).pdb >nul" "\n" \
            "if ERRORLEVEL 1 goto BuildEventFailed" "\n" \
            "goto BuildEventOK" "\n" \
            ":BuildEventFailed" "\n" \
            "echo *** ERROR! PostBuildStep FAILED for $(ProjectName)! EXE or DLL is probably running. ***" "\n" \
            "del /q $QUOTE$(TargetDir)$QUOTE$(TargetFileName)" "\n" \
            "exit 1" "\n" \
            ":BuildEventOK" "\n"
        $Description "Publishing to $OUTBINDIR"
        $ExcludedFromBuild "No"
    }
}

// Skeleton Project - All derived projects get this as a starting base
$Project
{
    $Folder "Source Files"
    {
        $File "$SRCDIR\public\tier0\memoverride.cpp"
        {
            $Configuration
            {
                $Compiler
                {
                    $Create/UsePrecompiledHeader "Not Using Precompiled Headers"
                }
            }
        }

        // Implement __imp__EncodePointer and __imp__DecodePointer so that we can run on XP SP1
        // when building with VS 2010 and higher.
        $File "$SRCDIR\public\tier0\pointeroverride.asm" [$WIN32]
        {
            $Configuration
            {
                $CustomBuildStep
                {
                    // General
                    $CommandLine "$QUOTE$(VCInstallDir)bin\ml.exe$QUOTE /c /Cp /Zi /Fo$QUOTE$(IntDir)\$(InputName).obj$QUOTE $QUOTE$(InputPath)$QUOTE"
                    $Description "Compiling pointeroverride.asm"
                    $Outputs "$(IntDir)\$(InputName).obj"
                }
            }
        }
    }

    $Folder "Link Libraries"
    {
        $Implib "$GITROOT\lib\tier0"
        $Lib "$GITROOT\lib\tier1"
        $Implib "$GITROOT\lib\vstdlib"
    }
}

